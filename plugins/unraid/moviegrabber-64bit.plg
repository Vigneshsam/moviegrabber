<?xml version='1.0' standalone='yes'?>
<PLUGIN>

<!--
The plugin file naming convention is similar to slackware packages. A plugin file name consist of four
components: name, version, architecture, and build, separated by dash characters, and with a .plg
extension: name-version-architecture-build.plg

Credits:
This plugin is heavily based on the excellent plugins created by Influencer - https://github.com/Influencer/UNplugged

General plugin file locations:

/boot/plugins/			# directory for system plugins (updated with new releases)
/boot/config/plugins/	# directory for user plugins
/boot/packages/			# downloaded slackware packages

Plugins (*.plg files) placed in either of the two designated plugin directories will be run, automatically,
during system boot.  Alternativel, they can be invoked, manually, without rebooting, using the command:
> installplg /boot/config/plugins/filename
  
For the moviegrabber plugin in particular:

/boot/config/plugins/moviegrabber-64bit.plg							# this file
/boot/config/plugins/moviegrabber/moviegrabber.cfg					# plugin configuration file
/boot/config/plugins/moviegrabber/moviegrabber.png					# icon file
/etc/rc.d/rc.moviegrabber											# plugin control script

/usr/local/emhttp/plugins/moviegrabber/moviegrabber.page			# page file for webGui menu system
/usr/local/emhttp/plugins/moviegrabber/moviegrabber.php				# webGui page code
/usr/local/emhttp/plugins/moviegrabber/moviegrabber.png				# icon file (copied from plugin dir)
/usr/local/emhttp/plugins/moviegrabber/event/disks_mounted			# script to execute for emhttp event
/usr/local/emhttp/plugins/moviegrabber/event/unmounting_disks		# script to execute for emhttp event

/tmp/moviegrabber-install											# plugin install script
/usr/local/moviegrabber				        						# install directory
/var/log/plugins/moviegrabber										# created upon install success  
-->

<!-- 
required slack packages to be downloaded should come first
-->
<FILE Name="/boot/packages/infozip-6.0-x86_64-2.txz" Run="upgradepkg --install-new">
<URL>http://sourceforge.net/projects/moviegrabber/files/unraid/packages/64bit/infozip-6.0-x86_64-2.txz/download</URL>
</FILE>

<FILE Name="/boot/packages/python-2.7.5-x86_64-1.txz" Run="upgradepkg --install-new">
<URL>http://sourceforge.net/projects/moviegrabber/files/unraid/packages/64bit/python-2.7.5-x86_64-1.txz/download</URL>
</FILE>

<FILE Name="/boot/packages/sqlite-3.7.17-x86_64-1.txz" Run="upgradepkg --install-new">
<URL>http://sourceforge.net/projects/moviegrabber/files/unraid/packages/64bit/sqlite-3.7.17-x86_64-1.txz/download</URL>
</FILE>

<FILE Name="/boot/packages/pyopenssl-0.11-x86_64-1alien.tgz" Run="upgradepkg --install-new">
<URL>http://sourceforge.net/projects/moviegrabber/files/unraid/packages/64bit/pyopenssl-0.11-x86_64-1alien.tgz/download</URL>
</FILE>

<FILE Name="/boot/packages/openssl-1.0.1f-x86_64-1_slack14.1.txz" Run="upgradepkg --install-new">
<URL>http://sourceforge.net/projects/moviegrabber/files/unraid/packages/64bit/openssl-1.0.1f-x86_64-1_slack14.1.txz/download</URL>
</FILE>

<!--
Here is the icon files for moviegrabber.  Icons should be 16x16 pixels, preferably .png files. No need to check the MD5
so we don't include that element.  We store this in plugin-specific persistent directory to
avoid having to re-download.
-->

<FILE Name="/boot/config/plugins/moviegrabber/images/device_status.png">
<URL>http://sourceforge.net/projects/moviegrabber/files/unraid/icons/device_status.png/download</URL>
</FILE>

<FILE Name="/boot/config/plugins/moviegrabber/images/new_config.png">
<URL>http://sourceforge.net/projects/moviegrabber/files/unraid/icons/new_config.png/download</URL>
</FILE>

<FILE Name="/boot/config/plugins/moviegrabber/images/controls.png">
<URL>http://sourceforge.net/projects/moviegrabber/files/unraid/icons/controls.png/download</URL>
</FILE>

<FILE Name="/boot/config/plugins/moviegrabber/images/information.png">
<URL>http://sourceforge.net/projects/moviegrabber/files/unraid/icons/information.png/download</URL>
</FILE>

<FILE Name="/boot/config/plugins/moviegrabber/moviegrabber.png">
<URL>http://sourceforge.net/projects/moviegrabber/files/unraid/icons/moviegrabber.png/download</URL>
</FILE>

<!-- 
Clean up previous install if present by deleting old plugin directory
-->

<FILE Name="/tmp/moviegrabber-cleanup" Run="/bin/bash">
<INLINE>
<![CDATA[
rm -f /etc/rc.d/rc.moviegrabber
rm -f -R /usr/local/emhttp/plugins/moviegrabber
[ -f /boot/config/plugins/moviegrabber/plgver.txt ] && rm -f /boot/config/plugins/moviegrabber/plgver.txt
rm /tmp/moviegrabber-cleanup
]]>
</INLINE>
</FILE>

<!-- 
create plugin version txt file
-->

<FILE Name="/boot/config/plugins/moviegrabber/plgver.txt">
<INLINE>
<![CDATA[
1.0.3
]]>
</INLINE>
</FILE>

<!-- 
create default moviegrabber config file
-->

<FILE Name="/boot/config/plugins/moviegrabber/moviegrabber.cfg">
<INLINE>
<![CDATA[
# moviegrabber configuration
SERVICE="disable"
INSTALLDIR="/usr/local/moviegrabber"
IP="0.0.0.0"
PORT="9090"
RUNAS="nobody"
PLG_STORAGESIZE="yes"
]]>
</INLINE>
</FILE>

<!-- 
Here are some files required to hook the plugin into the unRaid webGui menu system.
The page file defines which menu page the plugin will appear on.
-->

<FILE Name="/usr/local/emhttp/plugins/moviegrabber/moviegrabber.page">
<INLINE>
<![CDATA[
Menu="NetworkServices"
Icon="moviegrabber.png"
Version="1.0.0"
Author="binhex"
Type="php"
Title="MovieGrabber"
]]>
</INLINE>
</FILE>

<!--
Here is another INLINE file that defines the moviegrabber control script.  This script follows the form
of other control scripts in the /etc/rc.d directory.  Since we will be "executing" this script as a
command from other scripts, we must set its "mode" to be executable using the Mode attribute.
Control scripts normally include start, stop, and restart functions.  In addition to those, moviegrabber
requires enable and disable.
-->

<FILE Name="/etc/rc.d/rc.moviegrabber" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/sh
# Start/stop/restart/enable/disable moviegrabber.

moviegrabber_start()
{
	# no-op if not enabled
	if [ $SERVICE != "enable" ]; then
		sed -i "s/"disable"/"enable/"" $CONFIG	
	fi

	# no-op if already running
	if [ -r /var/run/moviegrabber/moviegrabber-$PORT.pid ]; then
		return
	fi
	
	# if directory doesn't exist or moviegrabber is not found, install it
	if [[ "$INSTALLDIR" != "" &&  ! -e "$INSTALLDIR/MovieGrabber.py" ]]; then
		moviegrabber_install
	fi
	
	# set env variable for character encoding to utf-8
	export LANG=en_US.UTF-8
	
	CMDLINE="sudo -u $RUNAS python $INSTALLDIR/MovieGrabber.py --ip $IP --port $PORT --pidfile /var/run/moviegrabber/moviegrabber-$PORT.pid --daemon"
	echo -n "Starting moviegrabber:  $CMDLINE"
	$CMDLINE
	echo
	
	while [ ! -e /var/run/moviegrabber/moviegrabber-$PORT.pid  ]; do
		sleep 1
	done
	echo "... OK"
	sleep 1
}

moviegrabber_stop()
{
	# no-op if not running
	if [ ! -r /var/run/moviegrabber/moviegrabber-$PORT.pid ]; then
		return
	fi
	
	echo "Stopping moviegrabber..."
	sleep 1
	kill $(cat /var/run/moviegrabber/moviegrabber-$PORT.pid)
	sleep 3
  
	if [ -f /var/run/moviegrabber/moviegrabber-$PORT.pid ]; then
		rm /var/run/moviegrabber/moviegrabber-$PORT.pid
	fi
  
	while [ -e /var/run/moviegrabber/moviegrabber-$PORT.pid  ]; do
		sleep 1
	done
	echo "... OK"
	sleep 1
}

moviegrabber_restart()
{
	moviegrabber_stop
	sleep 1
	moviegrabber_start
}

moviegrabber_buttonstart()
{
echo "Enabling moviegrabber"
	CONFIG="/boot/config/plugins/moviegrabber/moviegrabber.cfg"
	if [ -f $CONFIG ]; then
		sed -i "s/"disable"/"enable/"" $CONFIG	
		sleep 3
		echo "Starting moviegrabber"
	moviegrabber_start
	fi
}

moviegrabber_update()
{
	moviegrabber_stop
	sleep 1
    echo "installing latest version of moviegrabber"	
	cd /tmp
	moviegrabber_download=($(wget -q -O - http://moviegrabber.sourceforge.net/moviegrabber/version/latest | awk 'NR==2{gsub(/\015/,"");print}'))	
	wget -q --no-check-certificate $moviegrabber_download
	unzip -q *.zip
	cp -Rfu /tmp/moviegrabber/* $INSTALLDIR
	rm -Rf /tmp/moviegrabber
	chown -R $RUNAS:users "$INSTALLDIR"
	sleep 1
	moviegrabber_start
}

write_config()
{
	echo "# moviegrabber configuration" > /boot/config/plugins/moviegrabber/moviegrabber.cfg
	echo "SERVICE=\"$SERVICE\"" >> /boot/config/plugins/moviegrabber/moviegrabber.cfg
	echo "INSTALLDIR=\"$INSTALLDIR\"" >> /boot/config/plugins/moviegrabber/moviegrabber.cfg
	echo "IP=\"$IP\"" >> /boot/config/plugins/moviegrabber/moviegrabber.cfg
	echo "PORT=\"$PORT\"" >> /boot/config/plugins/moviegrabber/moviegrabber.cfg
	echo "RUNAS=\"$RUNAS\"" >> /boot/config/plugins/moviegrabber/moviegrabber.cfg
	echo "PLG_STORAGESIZE=\"$PLG_STORAGESIZE\"" >> /boot/config/plugins/moviegrabber/moviegrabber.cfg
 }

moviegrabber_change_settings()
{
	IP="$4"
	PORT="$2"
	INSTALLDIR="$3"

	if [ $RUNAS != $1 ]; then
		chown -R $1:users "$INSTALLDIR"
	fi
	
	RUNAS="$1"
	
	PLG_STORAGESIZE="$5"
	
	# create moviegrabber user if necessary
	if [[ $RUNAS != "nobody" && $RUNAS != "root" ]]; then
		if ( ! grep -q ^$RUNAS /etc/passwd ); then
	  		useradd -r -g users -d / -s /bin/false $RUNAS &> /dev/null
	  		cp /etc/passwd /etc/shadow /boot/config
		fi
	fi
}
moviegrabber_enable()
{
	# if not already enabled, enable it
		SERVICE=enable
		moviegrabber_stop
		moviegrabber_change_settings $1 $2 $3 $4 $5 $6 $7 $8
		write_config
        moviegrabber_start
}

moviegrabber_disable()
{
	moviegrabber_stop
	SERVICE=disable
	moviegrabber_change_settings $1 $2 $3 $4 $5 $6 $7 $8
	write_config
}

moviegrabber_install()
{	
	echo "installing latest version of moviegrabber"
	
	if [ ! -e "$INSTALLDIR" ]; then 
		mkdir -p $INSTALLDIR
    fi

	cd /tmp
	moviegrabber_download=($(wget -q -O - http://moviegrabber.sourceforge.net/moviegrabber/version/latest | awk 'NR==2{gsub(/\015/,"");print}'))	
	wget -q --no-check-certificate $moviegrabber_download
	unzip -q *.zip
	cp -Rfu /tmp/moviegrabber/* $INSTALLDIR
	chown -R $RUNAS:users "$INSTALLDIR"
	sleep 3
	echo "... OK"
	sleep 1
	rm -Rf /tmp/moviegrabber /tmp/*.zip;
}

moviegrabber_storagesize() 
{
	if [ -d $1 ]; then
		INST=`du -sh $1 | cut -f1`
	elif [ -f $1 ]; then
		INST=`ls -lah $1 | awk '{ print $5}'`
	fi
	
	echo "<b>Storage usage:</b>
	<td>
		$INST
	</td>"
}

moviegrabber_updateplg()
{
	cd /boot/config/plugins
	if [ -f moviegrabber-64bit.plg ]; then
		[ -f moviegrabber-64bit.plg.old ] && rm -f moviegrabber-64bit.plg.old
		mv moviegrabber-64bit.plg moviegrabber-64bit.plg.old
		echo "Updating plugin"		
		plugin_download=($(wget -q -O - http://moviegrabber.sourceforge.net/unraid/version/latest | awk 'NR==3{gsub(/\015/,"");print}'))
		wget -q --no-check-certificate $plugin_download
		/usr/local/sbin/installplg /boot/config/plugins/moviegrabber-64bit.plg
	else
		echo "Updating plugin"
		wget -q --no-check-certificate $plugin_download
		/usr/local/sbin/installplg /boot/config/plugins/moviegrabber-64bit.plg
	fi
}

moviegrabber_downgradeplg()
{
	cd /boot/config/plugins
	if [ -f moviegrabber-64bit.plg.old ]; then
		rm -f /moviegrabber-64bit.plg
		mv moviegrabber-64bit.plg.old moviegrabber-64bit.plg
		echo "downgrading plugin"
		/usr/local/sbin/installplg /boot/config/plugins/moviegrabber-64bit.plg
	fi
}

moviegrabber_vercheck()
{
	cd $INSTALLDIR
	curversion=$( git rev-parse HEAD )
	echo "$curversion"
}

# read our configuration
source /boot/config/plugins/moviegrabber/moviegrabber.cfg

case "$1" in
	'start')
		moviegrabber_start
	;;
	'stop')
		moviegrabber_stop
	;;
	'restart')
		moviegrabber_restart
	;;
	'enable')
		moviegrabber_enable $2 $3 $4 $5 $6 $7 $8
	;;
	'disable')
		moviegrabber_disable $2 $3 $4 $5 $6 $7 $8
	;;
	'install')
		moviegrabber_install
	;;
	'update')
		moviegrabber_update
	;;
	'storagesize')
		moviegrabber_storagesize $2 $3
	;;
	'updateplg')
		moviegrabber_updateplg
	;;
	'downgradeplg')
		moviegrabber_downgradeplg
	;;
	'buttonstart')
		moviegrabber_buttonstart
	;;
	'vercheck')
		moviegrabber_vercheck
	;;
	*)
		echo "usage $0 start|stop|restart|enable|disable|install|update|storagesize|updateplg|downgradeplg"
esac
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/moviegrabber/moviegrabber.png">
<LOCAL>/boot/config/plugins/moviegrabber/moviegrabber.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/moviegrabber/images/device_status.png">
<LOCAL>/boot/config/plugins/moviegrabber/images/device_status.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/moviegrabber/images/new_config.png">
<LOCAL>/boot/config/plugins/moviegrabber/images/new_config.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/moviegrabber/images/controls.png">
<LOCAL>/boot/config/plugins/moviegrabber/images/controls.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/moviegrabber/images/information.png">
<LOCAL>/boot/config/plugins/moviegrabber/images/information.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/moviegrabber/moviegrabber.php">
<INLINE>
<![CDATA[
<?PHP
$moviegrabber_cfg = parse_ini_file( "/boot/config/plugins/moviegrabber/moviegrabber.cfg");
$moviegrabber_installed = file_exists( $moviegrabber_cfg["INSTALLDIR"] . "/MovieGrabber.py" ) ? "yes" : "no";
$moviegrabber_rollback = file_exists( "/boot/config/plugins/moviegrabber-64bit.plg.old" ) ? "yes" : "no";
if ($moviegrabber_installed=="yes")
{
	if ($moviegrabber_cfg[PLG_STORAGESIZE]=="yes")
		$moviegrabber_datasize = shell_exec ( "/etc/rc.d/rc.moviegrabber storagesize $moviegrabber_cfg[INSTALLDIR]" );
	$moviegrabber_plgver = shell_exec ( "cat /boot/config/plugins/moviegrabber/plgver.txt" );
	$moviegrabber_running = file_exists( "/var/run/moviegrabber/moviegrabber-".$moviegrabber_cfg['PORT'].".pid") ? "yes" : "no";
	$moviegrabber_curversion = shell_exec ( "python $moviegrabber_cfg[INSTALLDIR]/MovieGrabber.py --version | sed '/*/!d'" );
	$moviegrabber_newversion = shell_exec ( "wget -q -O - http://moviegrabber.sourceforge.net/moviegrabber/version/latest | awk 'NR==1{gsub(/\015/,'');print}'" );
	$moviegrabber_installdirsize = trim(shell_exec( "if [ -e $moviegrabber_cfg[INSTALLDIR] ]; then du -sh $moviegrabber_cfg[INSTALLDIR] | cut -f1; else echo 0; fi"));
}
?>
<style>
	.notes {
		font-size:85%;
		color:#666;
	}
	.rednotes {
		font-size:88%;
		color:#FF0000;
	}
	.status_head {
		font-size: 14px;
		font-weight: bold;
	}
</style>
<table class="settings">
	<tr>
		<tr>
			<td>
				<u>Controls</u> <img src='/plugins/moviegrabber/images/controls.png'>
			</td>
		</tr>
		<td>
			<span style="margin-left:10px;"><b>Status:</b> <img src='/plugins/moviegrabber/images/device_status.png'></span>
		</td>
		<td>
			<?if ($moviegrabber_installed=="yes"):?>	
				<?if ($moviegrabber_running=="yes"):?>
					<a href="http://<?=$var['NAME'];?>:<?=$moviegrabber_cfg['PORT'];?>" target="_blank"><span style="color:green">RUNNING</span></a>
				<?else:?>
					<span style="color:red"><b>STOPPED</b></span>
				<?endif;?>
			<?else:?>
				<span style="color:grey"><b>NOT INSTALLED</b></span>
			<?endif;?>	
		</td>
	</tr>
	<tr>
		<td>
			<?if ($moviegrabber_installed=="yes"):?>
				<?if ($moviegrabber_running=="yes"):?>
					<form name="moviegrabber_start_stop" method="POST" action="/update.htm" target="progressFrame">
						<input type="hidden" name="cmd" value="/etc/rc.d/rc.moviegrabber stop">
						<input style="margin-bottom:5px" type="submit" name="runCmd" value="Stop">
					</form>
					<form name="moviegrabber_restart" method="POST" action="/update.htm" target="progressFrame">
						<input type="hidden" name="cmd" value="/etc/rc.d/rc.moviegrabber restart">
						<input type="submit" name="runCmd" value="Restart">
					</form>
				<?else:?>
					<form name="moviegrabber_buttonstart" method="POST" action="/update.htm" target="progressFrame">
						<input type="hidden" name="cmd" value="/etc/rc.d/rc.moviegrabber buttonstart">
						<input type="submit" name="runCmd" value="Start">
					</form>
				<?endif;?>
			<?else:?>
				<form name="moviegrabber_install" method="POST" action="/update.htm" target="progressFrame">
					<input type="hidden" name="cmd" value="/etc/rc.d/rc.moviegrabber install">			
					<input type="submit" name="runCmd" value="Install">
				</form>
			<?endif;?>
		</td>			
	</tr>
	<tr>
		<td>
			<form name="moviegrabber_update" method="POST" action="/update.htm" target="progressFrame">
				<input type="hidden" name="cmd" value="/etc/rc.d/rc.moviegrabber updateplg">			
				<input type="submit" name="runCmd" value="Update Plugin">
			</form>
			<td>
				<span style="color:red">UPDATE AVAILABLE</span>
			</td>
		</td>
	</tr>
	<tr>
		<td>
			<? if ($moviegrabber_rollback=="yes"): ?>
				<form name="moviegrabber_downgrade" method="POST" action="/update.htm" target="progressFrame">
					<input type="hidden" name="cmd" value="/etc/rc.d/rc.moviegrabber downgradeplg">
					<input type="submit" name="runCmd" value="Downgrade Plugin">
				</form>
			<?endif;?>				
		</td>
	</tr>
	<tr>
		<td>
			<? if (strcmp($moviegrabber_curversion, $moviegrabber_newversion)!=0): ?>
				<form name="moviegrabber_settings" method="POST" action="/update.htm" target="progressFrame">
					<input type="hidden" name="cmd" value="/etc/rc.d/rc.moviegrabber update">
					<input type="submit" name="runCmd" value="Update App">			
				</form>	 
				<td>
					<span style="color:red">UPDATE AVAILABLE</span>
				</td>
			<? endif; ?>
		</td>
	</tr>
</table>
<hr size="3" width="75%" color="grey" style="margin-top:10px;margin-bottom:10px" >
<table class="settings">
	<form name="moviegrabber_settings" method="POST" action="/update.htm" target="progressFrame">
		<tr>
			<td>
				<input type="hidden" name="cmd" value="/etc/rc.d/rc.moviegrabber">
				<u>Configuration</u> <img src='/plugins/moviegrabber/images/new_config.png'>
			</td>
		</tr>	
		<tr>
			<td>
				Enable moviegrabber:
				<td>
					<select name="arg1" size="1">
						<?=mk_option($moviegrabber_cfg['SERVICE'], "disable", "No");?>
						<?=mk_option($moviegrabber_cfg['SERVICE'], "enable", "Yes");?>
					</select>
				</td>
			</td>
		<tr>	
			<td>
				Install directory:
				<td>
					<input type="text" name="arg4" maxlength="60" value="<?=$moviegrabber_cfg['INSTALLDIR'];?>">
				</td>
			</td>	
		</tr>	
		<tr>
			<td>
				IP:
				<td>
					<input type="text" name="arg5" maxlength="40" value="<?=$moviegrabber_cfg['IP'];?>">
				</td>
			</td>
		</tr>
		<tr>
			<td>
				Port:
				<td>
					<input type="text" name="arg3" maxlength="40" value="<?=$moviegrabber_cfg['PORT'];?>">
				</td>
			</td>
		</tr>
		<tr>
			<td>
				Run as user:
				<td>
					<select name="runas" size="1" onChange="checkUSER(this.form);">
						<?=mk_option($moviegrabber_cfg['RUNAS'], "nobody", "nobody");?>
						<?=mk_option($moviegrabber_cfg['RUNAS'], "root", "root");?>
						<option value='other'<?=($moviegrabber_cfg['RUNAS'] != "root" && $moviegrabber_cfg['RUNAS'] != "nobody")?" selected=yes":"" ;?>>other</option>
					</select>
					<input type="hidden" name="arg2" style="width:66%" maxlength="40" value="<?=$moviegrabber_cfg['RUNAS'];?>">
				</td>
			</td>
		</tr>
		<tr>
			<td>
				Show storage memory usage:
				<td>
					<select name="storagesize" size="1" onChange="checkSTORAGE(this.form);">
						<?=mk_option($moviegrabber_cfg['PLG_STORAGESIZE'], "yes", "Yes");?>
						<?=mk_option($moviegrabber_cfg['PLG_STORAGESIZE'], "no", "No");?>
					</select>
					<input type="hidden" name="arg6" value="<?=$moviegrabber_cfg['PLG_STORAGESIZE'];?>">
				</td>
			</td>
		</tr>
		<tr>
			<td>
				<input type="submit" name="runCmd" value="Apply">
				<button type="button" onClick="done();">Done</button>
			</td>
		</tr>
	</form>
</table>
<hr size="3" width="75%" color="grey" style="margin-top:10px;margin-bottom:10px" >
<table class="settings">
	<tr>
		<td>
			<u>Information</u> <img src='/plugins/moviegrabber/images/information.png'>
		</td>
	</tr>
	<tr>
		<td>
			<? if ($moviegrabber_installed=="yes"): ?>
				<b>MovieGrabber version:</b> 
				<td>
					<?=$moviegrabber_curversion;?>
				</td>
			<? endif; ?>
		</td>
	</tr>
	<tr>
		<td>
			<b>Plugin version:</b> 
			<td>
				<?=$moviegrabber_plgver;?>
			</td>
		</td>
	</tr>
	<tr>
		<td>
			<? if ($moviegrabber_cfg[PLG_STORAGESIZE]=="yes"): ?>
				<?=$moviegrabber_datasize?>
			<? endif; ?>
		</td>
	</tr>	
</table>

<script type="text/javascript">

function checkUSER(form)
{
	if (form.runas.selectedIndex < 2 )
	{
		form.arg2.value = form.runas.options[form.runas.selectedIndex].value;
		form.arg2.type = "hidden";
	}
	else
	{
		form.arg2.value = "<?=$moviegrabber_cfg['RUNAS'];?>";
		form.arg2.type = "text";
	}
}

function checkSTORAGE(form)
{
	form.arg6.value = form.storagesize.options[form.storagesize.selectedIndex].value;
}

checkINSTALLDIR(document.moviegrabber_settings);
checkUSER(document.moviegrabber_settings);
checkSTORAGE(document.moviegrabber_settings);
</script>
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/moviegrabber/event/disks_mounted" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
source /boot/config/plugins/moviegrabber/moviegrabber.cfg
if [ $SERVICE = enable ]; then
/etc/rc.d/rc.moviegrabber start
fi
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/moviegrabber/event/unmounting_disks" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.moviegrabber stop
]]>
</INLINE>
</FILE>

<FILE Name="/tmp/moviegrabber-install" Run="/bin/bash">
<INLINE>
<![CDATA[
# include our config vars
source /boot/config/plugins/moviegrabber/moviegrabber.cfg

# create moviegrabber-writable directory for pid file
if [ ! -e /var/run/moviegrabber ]; then
  mkdir /var/run/moviegrabber
  chown $RUNAS:users /var/run/moviegrabber
  chmod 0777 /var/run/moviegrabber
fi
rm /tmp/moviegrabber-install
]]>
</INLINE>
</FILE>

<FILE Name="/var/log/plugins/moviegrabber">
<INLINE>
<![CDATA[

]]>
</INLINE>
</FILE>

</PLUGIN>